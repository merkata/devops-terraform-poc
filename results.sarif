{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [{"tool": {"driver": {"name": "Checkov", "version": "3.2.275", "informationUri": "https://checkov.io", "rules": [{"id": "CKV_AWS_260", "name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80", "shortDescription": {"text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"}, "fullDescription": {"text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"}, "help": {"text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80\nResource: aws_security_group.alb"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80"}, {"id": "CKV_AWS_131", "name": "Ensure that ALB drops HTTP headers", "shortDescription": {"text": "Ensure that ALB drops HTTP headers"}, "fullDescription": {"text": "Ensure that ALB drops HTTP headers"}, "help": {"text": "Ensure that ALB drops HTTP headers\nResource: aws_lb.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-alb-drops-http-headers"}, {"id": "CKV_AWS_150", "name": "Ensure that Load Balancer has deletion protection enabled", "shortDescription": {"text": "Ensure that Load Balancer has deletion protection enabled"}, "fullDescription": {"text": "Ensure that Load Balancer has deletion protection enabled"}, "help": {"text": "Ensure that Load Balancer has deletion protection enabled\nResource: aws_lb.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-150"}, {"id": "CKV_AWS_91", "name": "Ensure the ELBv2 (Application/Network) has access logging enabled", "shortDescription": {"text": "Ensure the ELBv2 (Application/Network) has access logging enabled"}, "fullDescription": {"text": "Ensure the ELBv2 (Application/Network) has access logging enabled"}, "help": {"text": "Ensure the ELBv2 (Application/Network) has access logging enabled\nResource: aws_lb.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-logging-22"}, {"id": "CKV_AWS_378", "name": "Ensure AWS Load Balancer doesn't use HTTP protocol", "shortDescription": {"text": "Ensure AWS Load Balancer doesn't use HTTP protocol"}, "fullDescription": {"text": "Ensure AWS Load Balancer doesn't use HTTP protocol"}, "help": {"text": "Ensure AWS Load Balancer doesn't use HTTP protocol\nResource: aws_lb_target_group.apps"}, "defaultConfiguration": {"level": "error"}}, {"id": "CKV2_AWS_28", "name": "Ensure public facing ALB are protected by WAF", "shortDescription": {"text": "Ensure public facing ALB are protected by WAF"}, "fullDescription": {"text": "Ensure public facing ALB are protected by WAF"}, "help": {"text": "Ensure public facing ALB are protected by WAF\nResource: aws_lb.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-public-facing-alb-are-protected-by-waf"}], "organization": "bridgecrew"}}, "results": [{"ruleId": "CKV_AWS_260", "ruleIndex": 0, "level": "warning", "attachments": [], "message": {"text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "modules/alb/main.tf"}, "region": {"startLine": 1, "endLine": 35, "snippet": {"text": "resource \"aws_security_group\" \"alb\" {\n  #checkov:skip=CKV_AWS_260: \"Rerouting to HTTPS is intentional\"\n  name        = substr(local.alb_name, 0, 32)\n  description = \"ALB Security Group\"\n  vpc_id      = var.vpc_id\n\n  ingress {\n    description = \"Allow HTTP traffic\"\n    from_port   = 80\n    to_port     = 80\n    protocol    = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  ingress {\n    description = \"Allow HTTPS traffic\"\n    from_port   = 443\n    to_port     = 443\n    protocol    = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  egress {\n    description = \"Allow all traffic out\"\n    from_port   = 0\n    to_port     = 0\n    protocol    = \"-1\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n\n  tags = merge(local.common_tags, {\n    Name = local.alb_name\n  })\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " \"Rerouting to HTTPS is intentional\""}]}, {"ruleId": "CKV_AWS_131", "ruleIndex": 1, "level": "warning", "attachments": [], "message": {"text": "Ensure that ALB drops HTTP headers"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "modules/alb/main.tf"}, "region": {"startLine": 37, "endLine": 51, "snippet": {"text": "resource \"aws_lb\" \"main\" {\n  #checkov:skip=CKV2_AWS_28: \"WAF is not enabled\"\n  #checkov:skip=CKV_AWS_91: \"Access logs are not enabled\"\n  #checkov:skip=CKV_AWS_150: \"Deletion protection is enabled on prod only\"\n  #checkov:skip=CKV_AWS_131: \"Not dropping http headers\"\n  name               = substr(local.alb_name, 0, 32)\n  internal           = false\n  load_balancer_type = \"application\"\n  security_groups    = [aws_security_group.alb.id]\n  subnets            = var.public_subnets\n\n  enable_deletion_protection = var.environment == \"prod\"\n\n  tags = local.common_tags\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " \"Not dropping http headers\""}]}, {"ruleId": "CKV_AWS_150", "ruleIndex": 2, "level": "warning", "attachments": [], "message": {"text": "Ensure that Load Balancer has deletion protection enabled"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "modules/alb/main.tf"}, "region": {"startLine": 37, "endLine": 51, "snippet": {"text": "resource \"aws_lb\" \"main\" {\n  #checkov:skip=CKV2_AWS_28: \"WAF is not enabled\"\n  #checkov:skip=CKV_AWS_91: \"Access logs are not enabled\"\n  #checkov:skip=CKV_AWS_150: \"Deletion protection is enabled on prod only\"\n  #checkov:skip=CKV_AWS_131: \"Not dropping http headers\"\n  name               = substr(local.alb_name, 0, 32)\n  internal           = false\n  load_balancer_type = \"application\"\n  security_groups    = [aws_security_group.alb.id]\n  subnets            = var.public_subnets\n\n  enable_deletion_protection = var.environment == \"prod\"\n\n  tags = local.common_tags\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " \"Deletion protection is enabled on prod only\""}]}, {"ruleId": "CKV_AWS_91", "ruleIndex": 3, "level": "warning", "attachments": [], "message": {"text": "Ensure the ELBv2 (Application/Network) has access logging enabled"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "modules/alb/main.tf"}, "region": {"startLine": 37, "endLine": 51, "snippet": {"text": "resource \"aws_lb\" \"main\" {\n  #checkov:skip=CKV2_AWS_28: \"WAF is not enabled\"\n  #checkov:skip=CKV_AWS_91: \"Access logs are not enabled\"\n  #checkov:skip=CKV_AWS_150: \"Deletion protection is enabled on prod only\"\n  #checkov:skip=CKV_AWS_131: \"Not dropping http headers\"\n  name               = substr(local.alb_name, 0, 32)\n  internal           = false\n  load_balancer_type = \"application\"\n  security_groups    = [aws_security_group.alb.id]\n  subnets            = var.public_subnets\n\n  enable_deletion_protection = var.environment == \"prod\"\n\n  tags = local.common_tags\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " \"Access logs are not enabled\""}]}, {"ruleId": "CKV_AWS_378", "ruleIndex": 4, "level": "warning", "attachments": [], "message": {"text": "Ensure AWS Load Balancer doesn't use HTTP protocol"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "modules/alb/main.tf"}, "region": {"startLine": 87, "endLine": 110, "snippet": {"text": "resource \"aws_lb_target_group\" \"apps\" {\n  #checkov:skip=CKV_AWS_378: \"HTTP redirect is intentional\"\n  for_each = var.apps\n\n  name        = \"${var.project_name}-${var.environment}-${each.key}\"\n  port        = each.value.port\n  protocol    = \"HTTP\"\n  vpc_id      = var.vpc_id\n  target_type = \"instance\"\n\n  health_check {\n    enabled             = true\n    path                = each.value.health_check_url\n    healthy_threshold   = 3\n    unhealthy_threshold = 3\n    timeout             = 5\n    interval            = 30\n  }\n\n  tags = {\n    Environment = var.environment\n    Project     = var.project_name\n  }\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " \"HTTP redirect is intentional\""}]}, {"ruleId": "CKV2_AWS_28", "ruleIndex": 5, "level": "warning", "attachments": [], "message": {"text": "Ensure public facing ALB are protected by WAF"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "modules/alb/main.tf"}, "region": {"startLine": 37, "endLine": 51, "snippet": {"text": "resource \"aws_lb\" \"main\" {\n  #checkov:skip=CKV2_AWS_28: \"WAF is not enabled\"\n  #checkov:skip=CKV_AWS_91: \"Access logs are not enabled\"\n  #checkov:skip=CKV_AWS_150: \"Deletion protection is enabled on prod only\"\n  #checkov:skip=CKV_AWS_131: \"Not dropping http headers\"\n  name               = substr(local.alb_name, 0, 32)\n  internal           = false\n  load_balancer_type = \"application\"\n  security_groups    = [aws_security_group.alb.id]\n  subnets            = var.public_subnets\n\n  enable_deletion_protection = var.environment == \"prod\"\n\n  tags = local.common_tags\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " \"WAF is not enabled\""}]}]}]}